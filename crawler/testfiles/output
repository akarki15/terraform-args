[
  {
    "Name": ": aws_acm_certificate",
    "Description": "  Get information on a Amazon Certificate Manager (ACM) Certificate",
    "ArgsStr": "\n\n * `domain` - (Required) The domain of the certificate to look up. If no certificate is found with this name, an error will be returned.\n * `statuses` - (Optional) A list of statuses on which to filter the returned list. Valid values are `PENDING_VALIDATION`, `ISSUED`,\n   `INACTIVE`, `EXPIRED`, `VALIDATION_TIMED_OUT`, `REVOKED` and `FAILED`. If no value is specified, only certificates in the `ISSUED` state\n   are returned.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_alb",
    "Description": "  Provides an Application Load Balancer data source.",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `arn` - (Optional) The full ARN of the load balancer.\n* `name` - (Optional) The unique name of the load balancer.\n\n~> **NOTE**: When both `arn` and `name` are specified, `arn` takes precedence.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_alb_listener",
    "Description": "  Provides an Application Load Balancer Listener data source.",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `arn` - (Required) The ARN of the listener.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_ami",
    "Description": "  Get information on a Amazon Machine Image (AMI).",
    "ArgsStr": "\n\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent AMI.\n\n* `executable_users` - (Optional) Limit search to users with *explicit* launch permission on\n the image. Valid items are the numeric account ID or `self`.\n\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-images in the AWS CLI reference][1].\n\n* `owners` - (Optional) Limit search to specific AMI owners. Valid items are the numeric\naccount ID, `amazon`, or `self`.\n\n* `name_regex` - (Optional) A regex string to apply to the AMI list returned\nby AWS. This allows more advanced filtering not supported from the AWS API. This\nfiltering is done locally on what AWS returns, and could have a performance\nimpact if the result is large. It is recommended to combine this with other\noptions to narrow down the list AWS returns.\n\n~> **NOTE:** At least one of `executable_users`, `filter`, `owners`, or\n`name_regex` must be specified.\n\n~> **NOTE:** If more or less than a single match is returned by the search,\nTerraform will fail. Ensure that your search is specific enough to return\na single AMI ID only, or use `most_recent` to choose the most recent one.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_availability_zone",
    "Description": "    Provides details about a specific availability zone",
    "ArgsStr": "\n\nThe arguments of this data source act as filters for querying the available\navailability zones. The given filters must match exactly one availability\nzone whose data will be exported as attributes.\n\n* `name` - (Optional) The full name of the availability zone to select.\n\n* `state` - (Optional) A specific availability zone state to require. May\n  be any of `\"available\"`, `\"information\"`, `\"impaired\"` or `\"available\"`.\n\nAll reasonable uses of this data source will specify `name`, since `state`\nalone would match a single AZ only in a region that itself has only one AZ.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_availability_zones",
    "Description": "    Provides a list of Availability Zones which can be used by an AWS account.",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `state` - (Optional) Allows to filter list of Availability Zones based on their\ncurrent state. Can be either `\"available\"`, `\"information\"`, `\"impaired\"` or\n`\"unavailable\"`. By default the list includes a complete set of Availability Zones\nto which the underlying AWS account has access, regardless of their state.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_billing_service_account",
    "Description": "  Get AWS Billing Service Account",
    "ArgsStr": "",
    "Args": null
  },
  {
    "Name": ": aws_caller_identity",
    "Description": "  Get information about the identity of the caller for the provider",
    "ArgsStr": "\n\nThere are no arguments available for this data source.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_cloudformation_stack",
    "Description": "    Provides metadata of a CloudFormation stack (e.g. outputs)",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `name` - (Required) The name of the stack\n\n",
    "Args": null
  },
  {
    "Name": ": aws_ebs_snapshot",
    "Description": "  Get information on an EBS Snapshot.",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `owners` - (Optional) Returns the snapshots owned by the specified owner id. Multiple owners can be specified.\n\n* `snapshot_ids` - (Optional) Returns information on a specific snapshot_id.\n\n* `restorable_by_user_ids` - (Optional) One or more AWS accounts IDs that can create volumes from the snapshot.\n\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-volumes in the AWS CLI reference][1].\n\n\n",
    "Args": null
  },
  {
    "Name": ": aws_ebs_volume",
    "Description": "  Get information on an EBS volume.",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `most_recent` - (Optional) If more than one result is returned, use the most\nrecent Volume.\n* `filter` - (Optional) One or more name/value pairs to filter off of. There are\nseveral valid keys, for a full reference, check out\n[describe-volumes in the AWS CLI reference][1].\n\n\n",
    "Args": null
  },
  {
    "Name": ": aws_ecs_container_definition",
    "Description": "    Provides details about a single container within an ecs task definition",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `task_definition` - (Required) The ARN of the task definition which contains the container\n* `container_name` - (Required) The name of the container definition\n\n",
    "Args": null
  },
  {
    "Name": ": aws_elb_service_account",
    "Description": "  Get AWS Elastic Load Balancing Service Account",
    "ArgsStr": "\n\n* `region` - (Optional) Name of the region whose AWS ELB account ID is desired.\n  Defaults to the region from the AWS provider configuration.\n\n\n",
    "Args": null
  },
  {
    "Name": ": aws_iam_policy_document",
    "Description": "  Generates an IAM policy document in JSON format",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `policy_id` (Optional) - An ID for the policy document.\n* `statement` (Required) - A nested configuration block (described below)\n  configuring one *statement* to be included in the policy document.\n\nEach document configuration must have one or more `statement` blocks, which\neach accept the following arguments:\n\n* `sid` (Optional) - An ID for the policy statement.\n* `effect` (Optional) - Either \"Allow\" or \"Deny\", to specify whether this\n  statement allows or denies the given actions. The default is \"Allow\".\n* `actions` (Optional) - A list of actions that this statement either allows\n  or denies. For example, ``[\"ec2:RunInstances\", \"s3:*\"]``.\n* `not_actions` (Optional) - A list of actions that this statement does *not*\n  apply to. Used to apply a policy statement to all actions *except* those\n  listed.\n* `resources` (Optional) - A list of resource ARNs that this statement applies\n  to. This is required by AWS if used for an IAM policy.\n* `not_resources` (Optional) - A list of resource ARNs that this statement\n  does *not* apply to. Used to apply a policy statement to all resources\n  *except* those listed.\n* `principals` (Optional) - A nested configuration block (described below)\n  specifying a resource (or resource pattern) to which this statement applies.\n* `not_principals` (Optional) - Like `principals` except gives resources that\n  the statement does *not* apply to.\n* `condition` (Optional) - A nested configuration block (described below)\n  that defines a further, possibly-service-specific condition that constrains\n  whether this statement applies.\n\nEach policy may have either zero or more `principals` blocks or zero or more\n`not_principals` blocks, both of which each accept the following arguments:\n\n* `type` (Required) The type of principal. For AWS accounts this is \"AWS\".\n* `identifiers` (Required) List of identifiers for principals. When `type`\n  is \"AWS\", these are IAM user or role ARNs.\n\nEach policy statement may have zero or more `condition` blocks, which each\naccept the following arguments:\n\n* `test` (Required) The name of the\n  [IAM condition type](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AccessPolicyLanguage_ConditionType)\n  to evaluate.\n* `variable` (Required) The name of a\n  [Context Variable](http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html#AvailableKeys)\n  to apply the condition to. Context variables may either be standard AWS\n  variables starting with `aws:`, or service-specific variables prefixed with\n  the service name.\n* `values` (Required) The values to evaluate the condition against. If multiple\n  values are provided, the condition matches if at least one of them applies.\n  (That is, the tests are combined with the \"OR\" boolean operation.)\n\nWhen multiple `condition` blocks are provided, they must *all* evaluate to true\nfor the policy statement to apply. (In other words, the conditions are combined\nwith the \"AND\" boolean operation.)\n\n## Context Variable Interpolation\n\nThe IAM policy document format allows context variables to be interpolated\ninto various strings within a statement. The native IAM policy document format\nuses `${...}`-style syntax that is in conflict with Terraform's interpolation\nsyntax, so this data source instead uses `&{...}` syntax for interpolations that\nshould be processed by AWS rather than by Terraform.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_ip_ranges",
    "Description": "  Get information on AWS IP ranges.",
    "ArgsStr": "\n\n* `regions` - (Optional) Filter IP ranges by regions (or include all regions, if\nomitted). Valid items are `global` (for `cloudfront`) as well as all AWS regions\n(e.g. `eu-central-1`)\n\n* `services` - (Required) Filter IP ranges by services. Valid items are `amazon`\n(for amazon.com), `cloudfront`, `ec2`, `route53` and `route53_healthchecks`.\n\n~> **NOTE:** If the specified combination of regions and services does not yield any\nCIDR blocks, Terraform will fail.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_prefix-list",
    "Description": "    Provides details about a specific prefix list",
    "ArgsStr": "\n\nThe arguments of this data source act as filters for querying the available\nprefix lists. The given filters must match exactly one prefix list\nwhose data will be exported as attributes.\n\n* `prefix_list_id` - (Optional) The ID of the prefix list to select.\n\n* `name` - (Optional) The name of the prefix list to select.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_redshift_service_account",
    "Description": "  Get AWS Redshift Service Account ID for storing audit data in S3.",
    "ArgsStr": "\n\n* `region` - (Optional) Name of the Region whose Redshift account id is desired. If not specified, default's to the region from the AWS provider configuration.\n\n\n",
    "Args": null
  },
  {
    "Name": ": aws_region",
    "Description": "    Provides details about a specific service region",
    "ArgsStr": "\n\nThe arguments of this data source act as filters for querying the available\nregions. The given filters must match exactly one region whose data will be\nexported as attributes.\n\n* `name` - (Optional) The full name of the region to select.\n\n* `current` - (Optional) Set to `true` to match only the region configured\n  in the provider. (It is not meaningful to set this to `false`.)\n\n* `endpoint` - (Optional) The endpoint of the region to select.\n\nAt least one of the above attributes should be provided to ensure that only\none region is matched.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_s3_bucket_object",
    "Description": "    Provides metadata and optionally content of an S3 object",
    "ArgsStr": "\n\nThe following arguments are supported:\n\n* `bucket` - (Required) The name of the bucket to read the object from\n* `key` - (Required) The full path to the object inside the bucket\n* `version_id` - (Optional) Specific version ID of the object returned (defaults to latest version)\n\n",
    "Args": null
  },
  {
    "Name": ": aws_security_group",
    "Description": "    Provides details about a specific Security Group",
    "ArgsStr": "\n\nThe arguments of this data source act as filters for querying the available\nsecurity group in the current region. The given filters must match exactly one\nsecurity group whose data will be exported as attributes.\n\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `id` - (Optional) The id of the specific security group to retrieve.\n\n* `name` - (Optional) The name that the desired security group must have.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired security group.\n\n* `vpc_id` - (Optional) The id of the VPC that the desired security group belongs to.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A Security Group will be selected if any one of the given values matches.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_subnet",
    "Description": "    Provides details about a specific VPC subnet",
    "ArgsStr": "\n\nThe arguments of this data source act as filters for querying the available\nsubnets in the current region. The given filters must match exactly one\nsubnet whose data will be exported as attributes.\n\n* `availability_zone` - (Optional) The availability zone where the\n  subnet must reside.\n\n* `cidr_block` - (Optional) The cidr block of the desired subnet.\n\n* `default_for_az` - (Optional) Boolean constraint for whether the desired\n  subnet must be the default subnet for its associated availability zone.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `id` - (Optional) The id of the specific subnet to retrieve.\n\n* `state` - (Optional) The state that the desired subnet must have.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired subnet.\n\n* `vpc_id` - (Optional) The id of the VPC that the desired subnet belongs to.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A subnet will be selected if any one of the given values matches.\n\n",
    "Args": null
  },
  {
    "Name": ": aws_vpc",
    "Description": "    Provides details about a specific VPC",
    "ArgsStr": "\n\nThe arguments of this data source act as filters for querying the available\nVPCs in the current region. The given filters must match exactly one\nVPC whose data will be exported as attributes.\n\n* `cidr_block` - (Optional) The cidr block of the desired VPC.\n\n* `dhcp_options_id` - (Optional) The DHCP options id of the desired VPC.\n\n* `default` - (Optional) Boolean constraint on whether the desired VPC is\n  the default VPC for the region.\n\n* `filter` - (Optional) Custom filter block as described below.\n\n* `id` - (Optional) The id of the specific VPC to retrieve.\n\n* `state` - (Optional) The current state of the desired VPC.\n  Can be either `\"pending\"` or `\"available\"`.\n\n* `tags` - (Optional) A mapping of tags, each pair of which must exactly match\n  a pair on the desired VPC.\n\nMore complex filters can be expressed using one or more `filter` sub-blocks,\nwhich take the following arguments:\n\n* `name` - (Required) The name of the field to filter by, as defined by\n  [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).\n\n* `values` - (Required) Set of values that are accepted for the given field.\n  A VPC will be selected if any one of the given values matches.\n\n",
    "Args": null
  }
]
